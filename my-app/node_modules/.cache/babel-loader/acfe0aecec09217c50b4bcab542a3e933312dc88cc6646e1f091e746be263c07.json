{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\react\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Aboutus from './components/Aboutus';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [Mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {}, timeout);\n  };\n  const Togglemode = () => {\n    if (Mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#090c1f';\n      showalert('Dark mode has been enabled', 'Success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert('Light mode has been enabled', 'Success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Utils\",\n      abouttext: \"About\",\n      mode: Mode,\n      toggle: Togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        heading: \"Enter text to analyze\",\n        mode: Mode,\n        showalert: showalert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bJeMrWD5GuJVNV6fWDqJMtAENHU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Aboutus","Alert","Navbar","Textform","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","Mode","setMode","alert","setalert","showalert","message","type","msg","setTimeout","timeout","Togglemode","document","body","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","title","abouttext","mode","toggle","className","heading","_c","$RefreshReg$"],"sources":["D:/Users/react/my-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Aboutus from './components/Aboutus';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\n\nfunction App() {\n  const [Mode,setMode]=useState('light')\n  const [alert,setalert]=useState(null);\n  const showalert = (message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      \n    }, timeout);\n  }\n  const Togglemode = ()=>{\n    if(Mode ==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#090c1f';\n      showalert('Dark mode has been enabled','Success');\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showalert('Light mode has been enabled','Success');\n    }\n  }\n  return (\n    <>\n    <Alert alert={alert}/>\n     <Navbar title=\"Text Utils\"  abouttext=\"About\" mode={Mode} toggle={Togglemode}/>\n     <div className='container'>\n       <Textform heading=\"Enter text to analyze\"mode={Mode} showalert={showalert}/>\n     </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,OAAO,CAAC;EACtC,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAMW,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM,CAEjB,CAAC,EAAEC,OAAO,CAAC;EACb,CAAC;EACD,MAAMC,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGV,IAAI,KAAI,OAAO,EAAC;MACjBC,OAAO,CAAC,MAAM,CAAC;MACfU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CV,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CV,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACF,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA,CAACN,KAAK;MAACa,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrBxB,OAAA,CAACL,MAAM;MAAC8B,KAAK,EAAC,YAAY;MAAEC,SAAS,EAAC,OAAO;MAACC,IAAI,EAAEtB,IAAK;MAACuB,MAAM,EAAEb;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/ExB,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAT,QAAA,eACxBpB,OAAA,CAACJ,QAAQ;QAACkC,OAAO,EAAC,uBAAuB;QAAAH,IAAI,EAAEtB,IAAK;QAACI,SAAS,EAAEA;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA,eACL,CAAC;AAEP;AAACpB,EAAA,CAjCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}